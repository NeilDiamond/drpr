fit0 <- gswt1(data=Jan15m)
print(fit0)
summary(fit0)
plot(fit0)
library(drpr)
library(minpack.lm)
?fitnelsonsiegel
fitnelsonsiegel(Jan15m)
fit1 <- fitnelsonsiegel(Jan15m)
print(fit1)
summary(fit1)
plot(fit1)
?fitnelsonsiegelsvensson
fitnelsonsiegelsvensson(Jan15, lambda1start=1/lambdastart(2.5),
lambda2start=1/lambdastart(5))
fit2 <- fitnelsonsiegelsvensson(Jan15m, lambda1start=1/lambdastart(2.5),
lambda2start=1/lambdastart(5))
print(fit2)
summary(fit2)
plot(fit2)
?drp
drp(fit0, fit1, fit2, avspotratesa=2.9546)
drpplot(fit0, fit1, fit2)
?gswt1adjust
?gkest1adjust
fit3 <- gswt1adjust(data=Jan15m)
print(fit3)
summary(fit3)
plot(fit3)
library(drpr)
library(minpack.lm)
?fitnelsonsiegeladjust
fit4 <- fitnelsonsiegeladjust(Jan15m)
print(fit4)
summary(fit4)
plot(fit4)
?fitnelsonsiegelsvenssonadjust
fit5 <- fitnelsonsiegelsvenssonadjust(Jan15m, lambda1start=1/lambdastart(2.5),
lambda2start=1/lambdastart(5))
print(fit5)
summary(fit5)
plot(fit5)
?drpadjust
drpadjust(fit3,fit4,fit5, avspotratesa=2.9546)
gswt1
gkest1
getS3method("print", "GaussianSmooth")
getS3method("summary", "GaussianSmooth")
getS3method("plot", "GaussianSmooth")
lambdastart
fitnelsonsiegel
getS3method("print", "NelsonSiegel")
getS3method("summary", "NelsonSiegel")
getS3method("plot", "NelsonSiegel")
fitnelsonsiegelsvensson
getS3method("print", "NelsonSiegelSvensson")
getS3method("summary", "NelsonSiegelSvensson")
getS3method("plot", "NelsonSiegelSvensson")
drp
drpplot
gswt1adjust
gkest1adjust
getS3method("print", "GaussianSmoothAdjust")
getS3method("summary", "GaussianSmoothAdjust")
getS3method("plot", "GaussianSmoothAdjust")
fitnelsonsiegeladjust
getS3method("print", "NelsonSiegelAdjust")
getS3method("summary", "NelsonSiegelAdjust")
getS3method("plot", "NelsonSiegelAdjust")
fitnelsonsiegelsvenssonadjust
getS3method("print", "NelsonSiegelSvenssonAdjust")
getS3method("summary", "NelsonSiegelSvenssonAdjust")
getS3method("plot", "NelsonSiegelSvenssonAdjust")
drpadjust
?Jan15
Jan15[,c(1,2,4,7,10,11)]
devtools::document()
devtools::load_all(".")
rm(list=ls())
devtools::load_all(".")
library(drpr)
library(drpr)
devtools::load_all(".")
library(drpr)
library(drpr)
devtools::load_all(".")
library(drpr)
library(drpr)
devtools::load_all(".")
library(drpr)
devtools::load_all(".")
library(drpr)
drp <- function(GSmodel10, NSmodel, NSSmodel, avspotratesa){
cod10 <- round( summary(GSmodel10)[[5]]+
100*((1+predict(NSmodel,newdata=data.frame(Maturity=10))/200)^2-1)+
100*((1+predict(NSSmodel,newdata=data.frame(Maturity=10))/200)^2-1 ))/3,4)
avswaprateann <- round(((1+avspotratesa/200)^2-1)*100,4)
results <- list(avspotratesa, avswaprateann, cod10, cod10-avswaprateann)
names(results) <- c("Average swap rate (semi-annual basis)",
"Annualized Swap average (annual basis)",
"10 year final cost of debt estimate",
"10 year DRP")
return(results)
}
drp <- function(GSmodel10, NSmodel, NSSmodel, avspotratesa){
cod10 <- round( (summary(GSmodel10)[[5]]+
100*((1+predict(NSmodel,newdata=data.frame(Maturity=10))/200)^2-1)+
100*((1+predict(NSSmodel,newdata=data.frame(Maturity=10))/200)^2-1 ))/3,4)
avswaprateann <- round(((1+avspotratesa/200)^2-1)*100,4)
results <- list(avspotratesa, avswaprateann, cod10, cod10-avswaprateann)
names(results) <- c("Average swap rate (semi-annual basis)",
"Annualized Swap average (annual basis)",
"10 year final cost of debt estimate",
"10 year DRP")
return(results)
}
devtools::load_all(".")
library(drpr)
library(drpr)
library(Rcmdr)
library(Rcmdr)
library(Rcmdr)
---
fitnelsonsiegel
library(drpr)
fitnelsonseiegel
fitnelsonsiegel()
fitnelsonsiegel
Jan15
Jan15m
Jan15m <- Jan15[order(Jan15$Maturity),][-1,]
fit1 <- fitnelsonsiegel(Jan15m)
print(fit1)
summary(fit1)
help(drpr)
version(drpr)
devtools::load_all(".")
library(drpr)
library(drpr)
devtools::load_all(".")
library(drpr)
library(drpr)
sessionInfo()
rm(list=ls())
devtools::load_all(".")
devtools::document()
library(drpr)
library(drpr)
devtools::load_all(".")
devtools::document()
devtools::load_all(".")
library(drpr)
library(drpr)
devtools::load_all(".")
library(drpr)
library(drpr)
svd(matrix(rnorm(301*400),301,400))
test <- svd(matrix(rnorm(301*400),301,400))
str(test)
qqnorm(test$d)
plot(test$d)
eigen$test$u
eigen(test$u)
eigen(test$u)$values
plot(eigen(test$u)$values)
plot(test$d)
install.packages("drpr", dep=T)
library(drpr)
devtools::load_all(".")
install.packages("minpack.lm")
devtools::load_all(".")
install.packages("nnls")
devtools::load_all(".")
library(drpr)
library(drpr)
install.packages("printr")
install.packages("knitr")
library(printr)
install.packages(
'printr',
type = 'source',
repos = c('http://yihui.name/xran', 'http://cran.rstudio.com')
)
devtools::load_all(".")
library(drpr)
library(drpr)
?Jan15
Jan15[,c(,7,10,11)]
Jan15[,c(7,10,11)]
Jan15[,c(7,10,11)]
head(Jan15)
head(Jan15)
devtools::load_all(".")
library(drpr)
library(drpr)
?nnnpls
1/lambdastart(5)
1/lambdastart(2.5)
fit5 <- fitnelsonsiegelsvensson(Jan15)
fit5
summary(fit5)
fitnelsonsiegelsvensson <- function(data, lambda1start=1/lambdastart(2.5),
lambda2start=1/lambdastart(5), epsilon=1E-14,fixed=F){
lambda1 <- lambda1start
lambda2 <- lambda2start
gamma1 <- log(lambda1start)
gamma2 <- log(lambda2start-lambda1start)
DF <- data
y <- DF$Yield
Z1 <- DF$Maturity/lambda1
Z2 <- DF$Maturity/lambda2
F0 <- 1-(1-exp(-Z1))/Z1
F1 <- (1-exp(-Z1))/Z1
F2 <- ((1-exp(-Z1))/Z1-exp(-Z1))
F3 <-  ((1-exp(-Z2))/Z2-exp(-Z2))
xx1 <- nnnpls(cbind(F0,F1,F2,F3),DF$Yield,c(1,1,-1,-1))
xx2 <- nnnpls(cbind(F0,F1,F2,F3),DF$Yield,c(1,1,1,-1))
xx3 <- nnnpls(cbind(F0,F1,F2,F3),DF$Yield,c(1,1,-1,1))
xx4 <- nnnpls(cbind(F0,F1,F2,F3),DF$Yield,c(1,1,1,1))
mindeviance=c(deviance(xx1),deviance(xx2),deviance(xx3),deviance(xx4))
eval(parse(text=paste0("svA <- coef(xx",which.min(mindeviance),")")))
if(fixed){
fitorig1 <- nlsLM(Yield~ exp(delta1) + (exp(delta2)-exp(delta1)) * (1-exp(-Maturity/(exp(gamma1)))) /
(Maturity/(exp(gamma1))) +
delta3 * ((1-exp(-Maturity/(exp(gamma1)))) /
(Maturity/(exp(gamma1)))-
exp(-Maturity/(exp(gamma1))))+
delta4 * ((1-exp(-Maturity/(exp(gamma2)+exp(gamma1)))) /
(Maturity/(exp(gamma2)+exp(gamma1)))-
exp(-Maturity/(exp(gamma2)+exp(gamma1)))),
data=data,
start=list(delta1=log(svA[1]+epsilon),
delta2=log(svA[2]+epsilon),
delta3=svA[3],
delta4=svA[4]),
control=nls.lm.control(maxiter=1000,maxfev=2000), trace=F,model=T)
} else {
fitorig1 <- nlsLM(Yield~ exp(delta1) + (exp(delta2)-exp(delta1)) * (1-exp(-Maturity/(exp(gamma1)))) /
(Maturity/(exp(gamma1))) +
delta3 * ((1-exp(-Maturity/(exp(gamma1)))) /
(Maturity/(exp(gamma1)))-
exp(-Maturity/(exp(gamma1))))+
delta4 * ((1-exp(-Maturity/(exp(gamma2)+exp(gamma1)))) /
(Maturity/(exp(gamma2)+exp(gamma1)))-
exp(-Maturity/(exp(gamma2)+exp(gamma1)))),
data=data,
start=list(delta1=log(svA[1]+epsilon),
delta2=log(svA[2]+epsilon),
delta3=svA[3],delta4=svA[4],
gamma1=log(lambda1start),
gamma2=log(lambda2start-lambda1start)),
control=nls.lm.control(maxiter=1000,maxfev=2000), trace=F,model=T)
}
class(fitorig1) <- c("NelsonSiegelSvensson","nls")
return(fitorig1)
}
fit5a <- fitnelsonsiegelsvensson(Jan15, lambda1start=0.17,lambdastart=3.4038, fixed=T)
fit5a <- fitnelsonsiegelsvensson(Jan15, lambda1start=0.17,lambda2start=3.4038, fixed=T)
fit5a
summary(fit5a)
fitnelsonsiegelsvenssonadjust <- function(data, lambda1start=1/lambdastart(2.5),
lambda2start=1/lambdastart(5), epsilon=1E-14,fixed=F){
lambda1 <- lambda1start
lambda2 <- lambda2start
gamma1 <- log(lambda1start)
gamma2 <- log(lambda2start-lambda1start)
DF <- data
y <- DF$Yield
Z1 <- DF$Maturity/lambda1
Z2 <- DF$Maturity/lambda2
F0 <- 1-(1-exp(-Z1))/Z1
F1 <- (1-exp(-Z1))/Z1
F2 <- ((1-exp(-Z1))/Z1-exp(-Z1))
F3 <-  ((1-exp(-Z2))/Z2-exp(-Z2))
BBB <- as.numeric(as.character(DF$Credit.rating)=="BBB")
BBBm <- as.numeric(as.character(DF$Credit.rating)=="BBB-")
xx1 <- nnnpls(cbind(F0,F1,F2,F3,BBB+BBBm,BBBm),DF$Yield,c(1,1,-1,-1,1,1))
xx2 <- nnnpls(cbind(F0,F1,F2,F3,BBB+BBBm,BBBm),DF$Yield,c(1,1,1,-1,1,1))
xx3 <- nnnpls(cbind(F0,F1,F2,F3,BBB+BBBm,BBBm),DF$Yield,c(1,1,-1,1,1,1))
xx4 <- nnnpls(cbind(F0,F1,F2,F3,BBB+BBBm,BBBm),DF$Yield,c(1,1,1,1,1,1))
mindeviance=c(deviance(xx1),deviance(xx2),deviance(xx3),deviance(xx4))
eval(parse(text=paste0("svA <- coef(xx",which.min(mindeviance),")")))
if(fixed){
fitorig1 <- nlsLM(Yield~ exp(delta1) + (exp(delta2)-exp(delta1)) * (1-exp(-Maturity/(exp(gamma1)))) /
(Maturity/(exp(gamma1))) +
delta3 * ((1-exp(-Maturity/(exp(gamma1)))) /
(Maturity/(exp(gamma1)))-
exp(-Maturity/(exp(gamma1))))+
delta4 * ((1-exp(-Maturity/(exp(gamma2)+exp(gamma1)))) /
(Maturity/(exp(gamma2)+exp(gamma1)))-
exp(-Maturity/(exp(gamma2)+exp(gamma1))))+
exp(theta1)*(BBB+BBBm)+exp(theta2)*BBBm,
data=DF,
start=list(delta1=log(svA[1]+epsilon),
delta2=log(svA[2]+epsilon),
delta3=svA[3],delta4=svA[4],
theta1=log(svA[5]+epsilon),
theta2=log(svA[6]+epsilon)),
control=nls.lm.control(maxiter=1024,maxfev=10000), trace=F,model=T)
} else {
fitorig1 <- nlsLM(Yield~ exp(delta1) + (exp(delta2)-exp(delta1)) * (1-exp(-Maturity/(exp(gamma1)))) /
(Maturity/(exp(gamma1))) +
delta3 * ((1-exp(-Maturity/(exp(gamma1)))) /
(Maturity/(exp(gamma1)))-
exp(-Maturity/(exp(gamma1))))+
delta4 * ((1-exp(-Maturity/(exp(gamma2)+exp(gamma1)))) /
(Maturity/(exp(gamma2)+exp(gamma1)))-
exp(-Maturity/(exp(gamma2)+exp(gamma1))))+
exp(theta1)*(BBB+BBBm)+exp(theta2)*BBBm,
data=DF,
start=list(delta1=log(svA[1]+epsilon),
delta2=log(svA[2]+epsilon),
delta3=svA[3],delta4=svA[4],
gamma1=log(lambda1start),
gamma2=log(lambda2start-lambda1start),
theta1=log(svA[5]+epsilon),
theta2=log(svA[6]+epsilon)),
control=nls.lm.control(maxiter=1024,maxfev=10000), trace=F,model=T)
}
class(fitorig1) <- c("NelsonSiegelSvenssonAdjust","nls")
return(fitorig1)
}
fit6 <- fitnelsonsiegelsvenssonadjust(Jan15)
fit6
summary(fit6)
fit6a <- fitnelsonsiegelsvenssonadjust(Jan15, lambda1start=0.17, lambda2start=3.4038, fixed=T)
fit6a
summary(fit6a)
coef(fit6)
coef(fit6a)
summary.NelsonSiegelSvenssonAdjust <- function(obj){
transformnssa <- function(obj){
cc <- coef(obj)
tt <- cc
if(length(tt)==8){
tt[1] <- exp(cc[1]); tt[2] <- exp(cc[2])-exp(cc[1])
tt[5] <- exp(cc[5]); tt[6] <- exp(cc[6])+exp(cc[5]);
tt[7] <- exp(cc[8]); tt[8] <- -exp(cc[7])
names(tt) <- c("beta1","beta2","beta3","beta4","lambda1", "lambda2","beta5", "beta6")
} else {
tt[1] <- exp(cc[1]); tt[2] <- exp(cc[2])-exp(cc[1])
tt[5] <- exp(cc[6]); tt[6] <- -exp(cc[5])
names(tt) <- c("beta1","beta2","beta3","beta4","beta5", "beta6")
}
return(tt)
}
x1 <- predict(obj, newdata=data.frame(Maturity=10, BBBm=0, BBB=0))[1]
x2 <- predict(obj, newdata=data.frame(Maturity=10, BBBm=0, BBB=1))[1]
x3 <- predict(obj, newdata=data.frame(Maturity=10, BBBm=1, BBB=0))[1]
n2 <- sum(obj$model$BBB, na.rm=T)
n3 <- sum(obj$model$BBBm, na.rm=T)
n1 <- length(obj$model$BBB[!is.na(obj$model$BBB)])-n2-n3
w1 <- n1/(n1+n2+n3)
w2 <- n2/(n1+n2+n3)
w3 <- n3/(n1+n2+n3)
x <- w1*x1+w2*x2+w3*x3
r <- list(getFromNamespace("summary.nls","stats")(obj),transformnssa(obj),x,((1+x/200)^2-1)*100)
attributes(r) <- NULL
names(r) <- c("Fitted Nelson-Siegel-Svensson Model","Original Parameters","Ten Year Yield (Semi-Annual Basis)",
"Ten Year Yield (Annual Basis)")
return(r)
}
summary(fit6)
summary(fit6a)
print.NelsonSiegelSvenssonAdjust <- function(obj){
transformnssa <- function(obj){
cc <- coef(obj)
tt <- cc
if(length(tt)==8){
tt[1] <- exp(cc[1]); tt[2] <- exp(cc[2])-exp(cc[1])
tt[5] <- exp(cc[5]); tt[6] <- exp(cc[6])+exp(cc[5]);
tt[7] <- exp(cc[8]); tt[8] <- -exp(cc[7])
names(tt) <- c("beta1","beta2","beta3","beta4","lambda1", "lambda2","beta5", "beta6")
} else {
tt[1] <- exp(cc[1]); tt[2] <- exp(cc[2])-exp(cc[1])
tt[5] <- exp(cc[6]); tt[6] <- -exp(cc[5])
names(tt) <- c("beta1","beta2","beta3","beta4","beta5", "beta6")
}
return(tt)
}
x1 <- predict(obj, newdata=data.frame(Maturity=10, BBBm=0, BBB=0))[1]
x2 <- predict(obj, newdata=data.frame(Maturity=10, BBBm=0, BBB=1))[1]
x3 <- predict(obj, newdata=data.frame(Maturity=10, BBBm=1, BBB=0))[1]
n2 <- sum(obj$model$BBB, na.rm=T)
n3 <- sum(obj$model$BBBm, na.rm=T)
n1 <- length(obj$model$BBB[!is.na(obj$model$BBB)])-n2-n3
w1 <- n1/(n1+n2+n3)
w2 <- n2/(n1+n2+n3)
w3 <- n3/(n1+n2+n3)
x <- w1*x1+w2*x2+w3*x3
p <- getFromNamespace("print.nls","stats")(obj)
r <- list(transformnssa(obj),x,((1+x/200)^2-1)*100)
attributes(r) <- NULL
names(r) <- c("Original parameters","Ten Year Yield (Semi-Annual Basis)",
"Ten Year Yield (Annual Basis)")
return(r)
}
print(fit6a)
fitnelsonsiegelsvensson
devtools::load_all(".")
library(drpr)
library(drpr)
fitnelsonsiegelsvensson
fit2a <- fitnelsonsiegelsvensson(Jan15, lambda1start=0.17,
lambda2start=3.4038, fixed=T)
fitnelsonsiegelsvensson(Jan15m, lambda1start=0.17,
lambda2start=3.4038, fixed=T)
devtools::load_all(".")
library(drpr)
library(drpr)
devtools::load_all(".")
library(drpr)
library(drpr)
Jan15m
Jan15m <- Jan15[order(Jan15$Maturity),][-1,]
Jan15m <- Jan15[order(Jan15$Maturity),][-1,]
fitnelsonsiegelsvensson(Jan15m, lambda1start=0.17,
lambda2start=3.4038, fixed=T)
library(drpr)
fitnelsonsiegelsvensson(Jan15, lambda1start=0.17, lambda2start=3.4038, fixed=T)
fitnelsonsiegelsvenssonadjust(Jan15, lambda1start=0.17, lambda2start=3.4038, fixed=T)
fitnelsonsiegelsvenssonadjust(Jan15m, lambda1start=0.17, lambda2start=3.4038, fixed=T)
fitnelsonsiegelsvensson(Jan15m, lambda1start=0.17, lambda2start=3.4038, fixed=T)
fitnelsonsiegelsvenssonadjust(Jan15m, lambda1start=0.17, lambda2start=3.4038, fixed=T)
gamma1
fitnelsonsiegelsvensson(Jan15m, lambda1start=0.17, lambda2start=3.4038, fixed=T)
delta1
ls()
data
QR
log(0.17)
log(3.4038)
log(1.173658-0.17)
log(3.4038-0.17)
head(Jan15m)
fitnelsonsiegelsvensson <- function(data, lambda1start=1/lambdastart(2.5),
lambda2start=1/lambdastart(5), epsilon=1E-14,fixed=F){
lambda1 <- lambda1start
lambda2 <- lambda2start
gamma1 <- log(lambda1start)
gamma2 <- log(lambda2start-lambda1start)
DF <- data
y <- DF$Yield
Z1 <- DF$Maturity/lambda1
Z2 <- DF$Maturity/lambda2
F0 <- 1-(1-exp(-Z1))/Z1
F1 <- (1-exp(-Z1))/Z1
F2 <- ((1-exp(-Z1))/Z1-exp(-Z1))
F3 <-  ((1-exp(-Z2))/Z2-exp(-Z2))
xx1 <- nnnpls(cbind(F0,F1,F2,F3),DF$Yield,c(1,1,-1,-1))
xx2 <- nnnpls(cbind(F0,F1,F2,F3),DF$Yield,c(1,1,1,-1))
xx3 <- nnnpls(cbind(F0,F1,F2,F3),DF$Yield,c(1,1,-1,1))
xx4 <- nnnpls(cbind(F0,F1,F2,F3),DF$Yield,c(1,1,1,1))
mindeviance=c(deviance(xx1),deviance(xx2),deviance(xx3),deviance(xx4))
eval(parse(text=paste0("svA <- coef(xx",which.min(mindeviance),")")))
print(svA)
if(fixed){
fitorig1 <- nlsLM(Yield~ exp(delta1) + (exp(delta2)-exp(delta1)) * (1-exp(-Maturity/(exp(gamma1)))) /
(Maturity/(exp(gamma1))) +
delta3 * ((1-exp(-Maturity/(exp(gamma1)))) /
(Maturity/(exp(gamma1)))-
exp(-Maturity/(exp(gamma1))))+
delta4 * ((1-exp(-Maturity/(exp(gamma2)+exp(gamma1)))) /
(Maturity/(exp(gamma2)+exp(gamma1)))-
exp(-Maturity/(exp(gamma2)+exp(gamma1)))),
data=data,
start=list(delta1=log(svA[1]+epsilon),
delta2=log(svA[2]+epsilon),
delta3=svA[3],
delta4=svA[4]),
control=nls.lm.control(maxiter=1000,maxfev=2000), trace=F,model=T)
} else {
fitorig1 <- nlsLM(Yield~ exp(delta1) + (exp(delta2)-exp(delta1)) * (1-exp(-Maturity/(exp(gamma1)))) /
(Maturity/(exp(gamma1))) +
delta3 * ((1-exp(-Maturity/(exp(gamma1)))) /
(Maturity/(exp(gamma1)))-
exp(-Maturity/(exp(gamma1))))+
delta4 * ((1-exp(-Maturity/(exp(gamma2)+exp(gamma1)))) /
(Maturity/(exp(gamma2)+exp(gamma1)))-
exp(-Maturity/(exp(gamma2)+exp(gamma1)))),
data=data,
start=list(delta1=log(svA[1]+epsilon),
delta2=log(svA[2]+epsilon),
delta3=svA[3],delta4=svA[4],
gamma1=log(lambda1start),
gamma2=log(lambda2start-lambda1start)),
control=nls.lm.control(maxiter=1000,maxfev=2000), trace=F,model=T)
}
class(fitorig1) <- c("NelsonSiegelSvensson","nls")
return(fitorig1)
}
fitnelsonsiegelsvensson(Jan15m, lambda1start=0.17, lambda2start=3.4038, fixed=T)
fitnelsonsiegelsvensson(Jan15, lambda1start=0.17, lambda2start=3.4038, fixed=T)
devtools::load_all(".")
library(drpr)
library(drpr)
devtools::load_all(".")
library(drpr)
library(drpr)
sessionInfo()
devtools::load_all(".")
library(drpr)
library(drpr)
install.packages("minpack.lm")
install.packages("minpack.lm")
install.packages("minpack.lm")
install.packages("minpack.lm")
install.packages("minpack.lm")
devtools::load_all(".")
devtools::load_all(".")
library(drpr)
library(drpr)
